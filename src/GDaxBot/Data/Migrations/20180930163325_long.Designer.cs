// <auto-generated />
using System;
using GDaxBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GDaxBot.Data.Migrations
{
    [DbContext(typeof(GDaxBotDbContext))]
    [Migration("20180930163325_long")]
    partial class @long
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GDaxBot.Data.AjustesProducto", b =>
                {
                    b.Property<int>("IdAjuste")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdProducto");

                    b.Property<int>("IdUsuario");

                    b.Property<decimal>("UmbralInferior");

                    b.Property<decimal>("UmbralSuperior");

                    b.Property<decimal>("ValorMarcado");

                    b.HasKey("IdAjuste");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AjustesProductos");
                });

            modelBuilder.Entity("GDaxBot.Data.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo");

                    b.Property<string>("Nombre");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GDaxBot.Data.Registro", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("IdProducto");

                    b.Property<decimal>("Valor");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdProducto");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("GDaxBot.Data.Sesion", b =>
                {
                    b.Property<int>("IdSesion")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdTelegram");

                    b.Property<int>("IdUsuario");

                    b.HasKey("IdSesion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("GDaxBot.Data.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastMessage");

                    b.Property<string>("Nombre");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GDaxBot.Data.AjustesProducto", b =>
                {
                    b.HasOne("GDaxBot.Data.Producto", "Producto")
                        .WithMany("AjustesProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GDaxBot.Data.Usuario", "Usuario")
                        .WithMany("AjustesProductos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GDaxBot.Data.Registro", b =>
                {
                    b.HasOne("GDaxBot.Data.Producto", "Producto")
                        .WithMany("Registros")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GDaxBot.Data.Sesion", b =>
                {
                    b.HasOne("GDaxBot.Data.Usuario", "Usuario")
                        .WithMany("Sesiones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
